fontBoldFont = Fett
fontItalicFont = Kursiv
fontExampleLineText = Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich.
#
# appear/AppearanceEditHandler.java
#
deleteSelectionAction = Auswahl löschen
duplicateSelectionAction = Auswahl duplizieren
pasteClipboardAction = Aus Zwischenablage einfügen
#
# appear/ClipboardActions.java
#
copySelectionAction = Auswahl kopieren
cutSelectionAction = Auswahl ausschneiden
#
# appear/RevertAppearanceAction.java
#
revertAppearanceAction = Darstellung wiederherstellen
#
# appear/ShowStateDialog.java
#
showStateDialogCancelButton = Abbrechen
showStateDialogEmptyNode = Leerlauf %s
showStateDialogNodeTitle = Zustand für %s
showStateDialogOkButton = OK
showStateDialogTitle = Zustand für %s
#
# chronogram/chronogui/ChronoFrame.java
#
ButtonExport = Exportieren…
ButtonLoad = Datei laden
ChronoTitle = Chronogramm
ChronoHelp = Zeigt Signale in Echtzeit an.
ChronoPrintTitle = Impulsdiagramm: %s von %s
ButtonExportAsImage = Als Bild exportieren
InputFileLoaded = Geladene Datei:
InputFileNoSysclk = Kein Sysclk-Signal gefunden
SimStatusCurrentScheme = Simulation des aktuellen Schemas
SimStatusName = Status:
SimStatusNoSignal = Kein Signal im Simulator->Chronogramm ausgewählt
SimStatusNoSysclk = Hinzufügen des Signals ‚sysclk‘ im Simulatoren->Chronogramm für Echtzeitbetrieb oder Laden der Datei
NoSignalsSelected = Momentan sind keine Signale ausgewählt. | Füge der Schaltung Pins hinzu, oder wähle ein Signal im Einstellungsfenster.
optionsTab = Optionen
optionsHelp = Signale, Betriebsmodus und Geschwindigkeit des Impulsdiagramms einstellen
selectionLabel = Signale und Formate
buttonAddRemoveSignals = hinzufügen oder entfernen
modeLabel = Aufzeichnungsmodus
timingLabel = Timing-Optionen
historyLabel = Verlauf
historyUnlimited = Endloser Verlauf
historyLimit = Anzahl zu speichernden Werte:
timeScale = Zeitachse:
gateDelay = Gatterlaufzeit:
cycleLength = Taktperiode: %s Ticks
nsFormat = %s ns
usFormat = %s \u00b5s
msFormat = %s ms
sFormat = %s s
perSecond = pro Sekunde
perTick = pro Tick
stepTime = Einzelschrittmodus
stepCoarse = Grobkörnige Übersicht
stepCoarseDescription = Die Daten werden erst erfasst, wenn sich alle Signale stabilisiert haben, wobei vorübergehende Signalschwankungen, die während der Ausbreitung auftreten können, ignoriert werden. Jeder erfasste Wert wird so aufgezeichnet, als ob er für %s stabil gehalten würde.
fineDetail = Erfassen von feinkörnigen Details
stepFineDescription = Daten werden immer dann erfasst, wenn sich ein Signalwert ändert, einschließlich aller vorübergehenden Signalschwankungen, die während der Übertragung auftreten können. Einschwingende Fluktuationen werden aufgezeichnet, als ob die Gatterverzögerung %s wäre, und stabile Signale werden aufgezeichnet, als ob sie für %s stabil gehalten würden.
realTime = Kontinuierlicher (Echtzeit-)Modus
realCoarse = Grobkörnige Übersicht
realCoarseDescription = Die Daten werden kontinuierlich aufgezeichnet, wenn der Simulator aktiviert ist, aber vorübergehende Signalschwankungen werden ignoriert. Jede Sekunde Echtzeit wird als %s der simulierten Schaltkreiszeit aufgezeichnet.
realFine = Feinkörnige Details
realFineDescription = Die Daten werden kontinuierlich aufgezeichnet, sobald der Simulator aktiviert ist, einschließlich transienter Signalschwankungen. Jede Sekunde Echtzeit wird als %s der simulierten Schaltkreiszeit aufgezeichnet.
clockTime = Taktmodus
clockCoarse = Grobkörnige Übersicht
clockCoarseDescriptionDual = Die Daten werden bei jedem Taktübergang erfasst, wobei vorübergehende Schwankungen, die zwischen den Übergängen oder während der Weitergabe auftreten können, ignoriert werden. Jeder Taktzyklus wird so aufgezeichnet, als ob er %s pro Zyklus (%s pro Tick) dauerte.
clockCoarseDescriptionRising = Die Daten werden bei jeder steigenden Taktflanke erfasst, wobei vorübergehende Schwankungen, die zwischen den Flanken oder während der Weitergabe auftreten können, ignoriert werden. Jeder Taktzyklus wird so aufgezeichnet, als ob er %s pro Zyklus (%s pro Tick) dauerte.
clockCoarseDescriptionFalling = Die Daten werden bei jeder fallenden Taktflanke erfasst, wobei vorübergehende Schwankungen, die zwischen den Flanken oder während der Weitergabe auftreten können, ignoriert werden. Jeder Taktzyklus wird so aufgezeichnet, als ob er %s pro Zyklus (%s pro Tick) dauerte.
clockCoarseDescriptionHigh = Die Daten werden nur dann kontinuierlich erfasst, wenn der Takt hoch ist, und ignorieren alle vorübergehenden Signalschwankungen, die während der Ausbreitung oder bei niedrigem Takt auftreten können. Änderungen, wenn der Takt hoch ist, werden aufgezeichnet, als ob die Gatterverzögerung %s wäre, und jeder Taktzyklus wird aufgezeichnet, als ob er %s pro Zyklus (%s pro Tick) dauerte.
clockCoarseDescriptionLow = Die Daten werden nur dann kontinuierlich erfasst, wenn der Takt niedrig ist, und ignorieren alle vorübergehenden Signalschwankungen, die während der Ausbreitung oder bei hohem Takt auftreten können. Änderungen, wenn der Takt niedrig ist, werden aufgezeichnet, als ob die Gatterverzögerung %s wäre, und jeder Taktzyklus wird aufgezeichnet, als ob er %s pro Zyklus (%s pro Tick) dauerte.
clockFine = Feinkörnige Details
clockFineDescription = Die Daten werden jedes Mal erfasst, wenn sich ein Signalwert ändert, einschließlich der transienten Signalschwankungen, die während der Ausbreitung auftreten können. Die transienten Fluktuationen werden so aufgezeichnet, als ob die Gatterverzögerung %s betragen würde, und jeder Taktzyklus wird so aufgezeichnet, als ob er %s pro Zyklus (%s pro Tick) in Anspruch nehmen würde.
clockSourceLabel = Taktquelle:
clockSourceNone = nicht verfügbar
selectClockDriverMessage = Diese Funktion braucht ein Taktsignal, aber in der Schaltung wurde keines gefunden. Fügen sie ein Taktsignal ein oder wählen sie eines der Signale als Takt.
selectClockObserverMessage = Wähle einen Takt oder Signal als Primärtakt.
selectClockMissingMessage = Dieser Modus braucht ein Taktsignal, aber in der Schaltung wurde keines gefunden. Fügen sie ein Taktsignal ein oder wählen sie eines der Signale als Takt.
selectClockMultipleMessage = Die Schaltung verfügt über mehrere Taktsignale. Wähle eines der Signale als Primärtakt.
clockDisciplineLabel = Taktverhalten:
clockDisciplineRising = Bei steigender Flanke aufnehmen
clockDisciplineFalling = Bei fallender Flanke aufnehmen
clockDisciplineDual = Bei beiden Flanke aufnehmen
clockDisciplineHigh = Während hohem Pegel aufnehmen
clockDisciplineLow = Während niedrigem Pegel aufnehmen
#
# chronogram/chronogui/LeftPanel.java
#
SignalName = Signalname
SignalValue = Signalwert
#
# chronogram/chronogui/PopupMenu.java
#
BusExpand = Erweitern
BusFormat = Format
#
# generic/AttributeSetTableModel.java
#
attributeChangeInvalidError = Attribut wurde nicht verändert da die Anfrage ungültig war
FPGA_Supported = FPGA-Unterstützung
#
# generic/AttrTable.java
#
attributeChangeInvalidTitle = Ungültiger Wert
attributeDialogTitle = Wert auswählen
#
# generic/RegTabContent.java
#
registerTabNameTitle = Name
registerTabValueTitle = Wert
#
# generic/ZoomControl.java
#
zoomShowGrid = Gitternetz umschalten
zoomAuto = Auto
#
# hex/Clip.java
#
hexPasteErrorTitle = Fehler beim Einfügen
hexPasteSupportedError = Der Inhalt der Zwischenablage konnte nicht eingefügt werden.
hexPasteTooSmall = Zwischenablage (%d Wörter) zu klein, um die ausgewählte Region (%d Wärter) zu füllen.\n Trotzdem einfügen?
#
# hex/HexFile.java
#
confirmOverwriteMessage = Die Datei existiert bereits. Soll die Datei überschrieben werden?
confirmOverwriteTitle = Überschreiben bestätigen
hexFileOpenError = Datei konnte nicht geöffnet werden.
hexFileWriteError = Fehler beim Schreiben der Datei.
hexFormatTitle = Hex-Dateiformat
ramLoadDialogTitle = Speicherabbild laden
ramLoadErrorTitle = Fehler beim Laden des Speicherabbildes
ramSaveDialogTitle = Speicherabbild speichern
ramSaveErrorTitle = Fehler beim Speichern des Speicherabbildes
#
# hex/HexFrame.java
#
closeButton = Fenster schließen
hexFrameMenuItem = Hex-Editor
hexFrameTitle = Hex-Editor
openButton = Öffnen…
saveButton = Speichern…
#
# log/FilePanel.java
#
fileAppendOption = Anfügen
fileCancelOption = Abbrechen
fileCannotWriteMessage = Fehlende Berechtigungen um „%s“ zu schreiben.
fileCannotWriteTitle = Datei nicht verfügbar
fileDisableButton = Deaktivieren
fileDisabled = Dateiausgabe deaktiviert.
fileEnableButton = Aktivieren
fileEnabled = Dateiausgabe aktiviert.
fileExistsMessage = Die Datei „%s“ existiert bereits.
fileExistsTitle = Datei exisitiert bereits.
fileHeaderCheck = Kopfzeile einfügen
fileHelp = Dateiausgabe konfigurieren.
fileLabel = Datei:
fileOverwriteOption = Überschreiben
fileSelectButton = Auswählen…
fileTab = Datei
#
# log/LogFrame.java
#
logFrameMenuItem = %s: Log
logFrameTitle = Log %s von %s
addRemoveSignals = Signal hinzufügen oder entfernen
#
# log/SelectionPanel.java
#
selectionTab = Auswahl
selectionHelp = Auswählen welche Bauteile geloggt werden sollen.
selectionDesc = Ziehe Signale, um sie auszuwählen oder umzuordnen.
exploreLabel = Verfügbare Signale in der Schaltung:
listLabel = Anzuzeigende Signale:
timeSelectionClock = Wählen sie den Takt:
timeSelectionEnable = Zeitauswahl aktivieren
timeSelectionFrequency = Frequenz:
#
# log/TablePanel.java
#
tableHelp = Log der aktuellen Werte ansehen.
tableTab = Tabelle
#
# log/ValueTable.java
#
tableEmptyMessage = Auswahl ist leer.
tableHeaderHelp = Radix:
#
# main/AttrTableCircuitModel.java
#
cannotModifyCircuitError = Diese Schaltung kann nicht verändert werden.
changeCircuitAttrAction = Schaltung ändern
circuitAttrTitle = Schaltung: %s
#
# main/AttrTableComponentModel.java
#
changeAttributeAction = Attribut ändern
#
# main/AttrTableSelectionModel.java
#
hdlAttrTitle = VHDL-Einheit: %s
selectionAttributeAction = Ändere Auswahleigenschaften
selectionMultiple = %s × %s
selectionVarious = Diverse Elemente × %s
#
# main/Canvas.java
#
canvasExceptionError = Simulation aufgrund eines internen Fehlers angehalten
canvasOscillationError = Oszillation aufgetreten
canvasWidthError = Breiten nicht kompatibel
#
# main/ExportImage.java
#
couldNotCreateFile = Die Datei konnte nicht erstellt werden.
exportEmptyCircuitsMessage = Keine nicht-leeren Schaltungen für den Export vorhanden.
exportEmptyCircuitsTitle = Kann nicht exportieren
exportGifFilter = GIF-Dateien (*.gif)
exportImageDirectorySelect = Exportverzeichnis auswählen
exportImageProgress = Berechne Bild…
exportImageSelect = Bild exportieren
exportJpgFilter = JPEG-Dateien (*.jpeg, *.jpg)
exportNewDirectoryErrorMessage = Das Verzeichnis konnte nicht erstellt werden.
exportNewDirectoryErrorTitle = Kann Verzeichnis nicht erstellen
exportPngFilter = PNG-Dateien (*.png)
exportSvgFilter = SVG-Dateien (*.svg)
exportTikZFilter = TikZpicture Dateien (*.tex)
labelCircuits = Schaltungen:
labelImageFormat = Bildformat:
labelPrinterView = Druckeransicht:
labelScale = Skalierung:
#
# main/Frame.java
#
cancelOption = Abbrechen
confirmCloseTitle = Schließen bestätigen
confirmDiscardMessage = Was soll mit den ungespeicherten Änderungen an %s geschehen?
designTab = Design
discardOption = Verwerfen
propertiesTab = Einstellungen
saveOption = Speichern
simulateTab = Simulation
stateTab = Status
titleCircFileKnown = %s von %s
titleFileKnown = %s
titleUnsavedProjectState = Nicht gespeichert
#
# main/Print.java
#
labelHeader = Titel:
labelRotateToFit = Drehen zum Anpassen:
printEmptyCircuitsMessage = Keine nicht-leeren Schaltungen zum Drucken vorhanden.
printEmptyCircuitsTitle = Kann nicht drucken
printParmsTitle = Druckparameter
#
# main/SelectionActions.java
#
circularError = Eine Teilschaltung, die diese Schaltung verwendet, kann nicht eingefügt werden, da dies zu einer zirkulären Referenz führt.
dropComponentAction = Bauteil entfernen
dropComponentsAction = Bauteile entfernen
moveSelectionAction = Auswahl verschieben
pasteCloneCancel = Abbrechen
pasteCloneIgnore = Ignorieren
pasteCloneQuery = Die Zwischenablage beinhaltet „%s.“ Das Projekt beinhaltet es nicht, aber ein anderes mit gleichem Namen.
pasteCloneReplace = Ersetzen
pasteCloneTitle = Komponente
pasteDropMessage = Einige Komponenten der Zwischenablage wurden nicht eingefügt, da diese nicht in der Projekt Bibliothek enthalten sind:
pasteDropTitle = Komponente nicht eingefügt
#
# main/SimulationToolbarModel.java
#
simulateDisableTicksTip = Takt abschalten
simulateEnableTicksTip = Takt einschalten
simulateRunTip = Simulator kontinuierlich betreiben
simulateStepTip = Einen Signaldurchlauf simulieren
simulateStopTip = Stoppsimulator
simulateTickFullTip = Einen vollen Zyklus weiterschalten
simulateTickHalfTip = Einen halben Zyklus weiterschalten
#
# main/StatisticsDialog.java
#
statsCloseButton = Schließen
statsComponentColumn = Bauteil
statsDialogTitle = %s Statistik
statsLibraryColumn = Bibliothek
statsRecursiveCountColumn = Rekursiv
statsSimpleCountColumn = Einfach
statsUniqueCountColumn = Eindeutig
#
# main/TickCounter.java
#
tickRateHz = %s Hz
tickRateKHz = %s kHz
tickRateMHz = %s MHz
#
# main/ToolAttributeAction.java
#
changeToolAttrAction = Ändere Werkzeugeigenschaft
#
# main/ToolboxToolbarModel.java
#
projectAddCircuitTip = Schaltung hinzufügen
projectEditAppearanceTip = Aussehen der angezeigten Schaltung bearbeiten
projectMoveCircuitDownTip = Angezeigte Schaltung in der Liste nach unten
projectMoveCircuitUpTip = Angezeigte Schaltung in der Liste nach oben
projectRemoveCircuitTip = Angezeigte Schaltung entfernen
#
# menu/EditPopup.java
#
editAddControlItem = Knoten hinzufügen
editClearItem = Löschen
editCopyItem = Kopieren
editCutItem = Ausschneiden
editDuplicateItem = Duplizieren
editLowerBottomItem = Nach ganz hinten absenken
editLowerItem = Auswahl absenken
editRaiseItem = Auswahl anheben
editRaiseTopItem = Nach ganz vorne anheben
editRemoveControlItem = Knoten entfernen
#
# menu/MenuEdit.java
#
editCantRedoItem = Wiederherstellen nicht möglich
editCantUndoItem = Zurücknehmen nicht möglich
editMenu = Bearbeiten
editPasteItem = Einfügen
editRedoItem = %s wiederherstellen
editSelectAllItem = Alles auswählen
editUndoItem = %s zurücknehmen
#
# menu/MenuFile.java
#
fileCloseItem = Schließen
fileExportImageItem = Bild exportieren…
fileMenu = Datei
fileMergeItem = Zusammenführen…
fileNewItem = Neu
fileOpenItem = Öffnen…
filePreferencesItem = Voreinstellungen…
filePrintItem = Drucken…
fileQuitItem = Beenden
fileSaveAsItem = Speichern unter…
fileSaveItem = Speichern
fileExportProject = Projektbündel exportieren…
fileExtractRunProject = Projektbündel extrahieren und öffnen…
#
# menu/MenuHelp.java
#
helpAboutItem = Über…
helpDisplayError = Konnte die Hilfedaten nicht anzeigen.
helpGuideItem = Anwenderhandbuch
helpLibraryItem = Bibliotheksreferenz
helpMenu = Hilfe
helpNotFoundError = Hilfedaten nicht gefunden.
helpsetUrl = doc/doc_de.hs
helpTutorialItem = Kurzanleitung
helpUnavailableError = Konnte die Hilfedaten nicht laden.
helpWindowTitle = Dokumentation von Logisim-evolution
helpProjectWebsite = Projekt Webseite
#
# menu/MenuProject.java
#
projectImportVhdlItem = VHDL-Einheit importieren…
projectMenu = Projekt
projectMoveCircuitDownItem = Schaltung nach unten
projectMoveCircuitUpItem = Schaltung nach oben
projectOptionsItem = Optionen…
projectRevertAppearanceItem = Standart Aussehen wiederherstellen
projectUnloadLibrariesItem = Bibliotheken entfernen…
#
# menu/MenuSimulate.java
#
simulateAssemblyViewer = Assembly-Betrachter
simulateDownStateMenu = Aufsteigen
simulateGenVhdlFilesItem = VHDL-Simulator neu starten
simulateLogItem = Chronogramm
simulateMenu = Simulieren
simulateRunItem = Simulation starten
simulateResetItem = Simulation zurücksetzen
simulateStepItem = Simulation weiterschalten
simulateTestItem = Testvektor…
simulateTickFreqItem = %s Hz
simulateTickHalfItem = Halben Zyklus weiterschalten
simulateTickFullItem = Vollständigen Zyklus weiterschalten
simulateTickItem = Weiterschalten aktivieren
simulateTickFreqMenu = Schaltfrequenz
simulateTickKFreqItem = %s kHz
simulateUpStateMenu = Absteigen
simulateVhdlEnableItem = VHDL Simulation aktiviert
#
# menu/OpenRecent.java
#
fileOpenRecentItem = Zuletzt geöffnet
fileOpenRecentNoChoices = (Keine)
#
# menu/Popups.java
#
circuitMenu = Schaltung
libMenu = Bibliothek
projectAddCircuitItem = Schaltung hinzufügen…
projectAddVhdlItem = VHDL-Einheit hinzufügen…
projectAnalyzeCircuitItem = Schaltung analysieren
projectEditCircuitAppearanceItem = Schaltungsaussehen bearbeiten
projectEditCircuitLayoutItem = Schaltungslayout bearbeiten
projectToggleCircuitAppearanceItem = Wechsel zwischen Layout- und Symbolansicht
projectEditVhdlItem = VHDL-Code bearbeiten
projectGetCircuitStatisticsItem = Schaltungsstatistik ermitteln
projectLoadBuiltinItem = Eingebaute Bibliothek…
projectLoadJarItem = JAR-Bibliothek…
projectLoadLibraryItem = Bibliothek laden
projectLoadLogisimItem = Logisim-evolution Bibliothek…
projectReloadLibraryItem = Bibliothek neu laden
projectRemoveCircuitItem = Schaltung entfernen
projectRemoveVhdlItem = VHDL-Einheit entfernen
projectSetAsMainItem = Als Hauptschaltung festlegen
projectUnloadLibraryItem = Bibliothek entfernen
projMenu = Projekt
vhdlMenu = VHDL Einheit
#
# menu/PrintHandler.java
#
couldNotCreateImage = Die Bilddatei konnte nicht erstellt werden.
exportImageButton = Exportieren
exportImageFileSelect = Exportdatei auswählen
printError = Fehler beim Drucken: %s
printErrorTitle = Fehler beim Drucken
#
# menu/ProjectCircuitActions.java
#
analyzeErrorTitle = Kann nicht analysieren
analyzeNoExpressionTitle = Ausdruck wurde nicht ermittelt
analyzeTooManyInputsError = Die Analyse kann nicht mehr als %s Eingänge verarbeiten.
analyzeTooManyOutputsError = Die Analyse kann nicht mehr als %s Ausgänge verarbeiten.
circuitCreateTitle = Hinzufügen von Schaltkreisaktionen
circuitNameDialogTitle = Schaltungsnamen eingeben
circuitNameExists = Dieser Name wird bereits in Ihrem Projekt verwendet und kann daher nicht verwendet werden.
circuitNameInvalidName = Der Name ist ungültig (er muss der Regel folgen ([a-zA-Z]+\\w*)).
circuitNameKeyword = Dieser Name ist ein Schlüsselwort und kann daher nicht verwendet werden.
circuitNameMissingError = Jede Schaltung benötigt einen Namen.
circuitNamePrompt = Schaltungsname:
circuitRemoveErrorTitle = Kann Schaltung nicht entfernen
circuitRemoveLastError = Bibliothek muß mindestens eine Schaltung enthalten.
circuitRemoveUsedError = Schaltungen, die in anderen Schaltungen benutzt werden, können nicht entfernt werden.
vhdlNameDialogTitle = Eingang VHDL Entitätsname
vhdlNamePrompt = VHDL Körpername:
#
# menu/ProjectLibraryActions.java
#
jarClassNamePrompt = Klassenname:
jarClassNameTitle = JAR-Klasse eingeben
loadBuiltinDialogTitle = Eingebaute Bibliothek laden
loadBuiltinErrorTitle = Kann eingebaute Bibliothek nicht laden
loadBuiltinNoneError = Alle eingebauten Bibliotheken sind schon geladen.
loadJarDialogTitle = JAR-Datei laden
loadLogisimDialogTitle = Logisim-evolution-Datei laden
unloadErrorTitle = Kann Bibliothek nicht entfernen
unloadLibrariesDialogTitle = Zu entfernende Bibliotheken auswählen
unloadNoneError = Alle geöffneten Dateien werden benutzt.
#
# opts/MouseOptions.java
#
mouseHelp = Werkzeuge den Maustasten zuordnen.
mouseMapNone = Kein Werkzeug ausgewählt
mouseMapText = Maustastenbelegung
mouseMapText2 = für %s
mouseRemoveButton = Entfernen
mouseTitle = Maus
#
# opts/OptionsActions.java
#
addMouseMappingAction = Mausbelegung hinzufügen
removeMouseMappingAction = Mausbelegung entfernen
setOptionAction = Setze %s
#
# opts/OptionsFrame.java
#
optionsFrameMenuItem = %s: Optionen
optionsFrameTitle = %s Optionen
revertButton = Vorlage wiederherstellen
revertHelp = Wiederherstellen der Projekteinstellungen auf Vorlagenvorgaben.
revertTitle = Zurücksetzen
#
# opts/SimulateOptions.java
#
gateUndefined = Gatterausgang bei undefiniertem Zustand
MemoriesStartupUnknown = Speicherelemente beginnen im unbekannten/zufälligen Zustand (eher als 0).
simulateHelp = Simulatoroptionen einstellen.
simulateLimit = Iterationen bis zur Oszillation
simulateRandomness = Bauteileverzögerungen mit Rauschen versehen
simulateTitle = Simulation
#
# opts/ToolbarActions.java
#
toolbarAddAction = Werkzeugleistensymbol hinzufügen
toolbarInsertSepAction = Trenner einfügen
toolbarMoveAction = Werkzeugleistensymbol verschieben
toolbarRemoveAction = Werkzeugleistensymbol entfernen
toolbarRemoveSepAction = Trenner entfernen
#
# opts/ToolbarOptions.java
#
toolbarAddSeparator = Trenner hinzufügen
toolbarAddTool = Werkzeug hinzufügen
toolbarHelp = Werkzeuge der Werkzeugleiste bearbeiten.
toolbarMoveDown = Nach unten
toolbarMoveUp = Nach oben
toolbarRemove = Entfernen
toolbarTitle = Werkzeugleiste
#
# PrefMonitorBooleanConvert.java
#
OptionConvertAll = Konvertierung des aktuellen Erscheinungsbildes von Pins und Sonden
OptionConvertAllPinsProbes = Konvertieren Sie alle Pins und Sonden im Projekt, um das Aussehen „%s“ zu verwenden?
OptionNo = Nein, so bleiben, wie sie sind.
OptionYes = Ja, konvertieren
#
# prefs/ExperimentalOptions.java
#
accelD3D = Direct 3D
accelDefault = Standard verwenden
accelLabel = Grafik-Beschleunigung:
accelMetal = Metal (nur macOS)
accelNone = Keine
accelOpenGL = OpenGL
accelRestartLabel = Logisim-evolution muß zur Aktivierung der Änderungen neu gestartet werden.
experimentHelp = Funktionen aktivieren, die noch nicht ausgiebig getestet worden sind
experimentTitle = Experimentell
simQueueLabel = Warteschlange für Simulationsereignisse:
simQueueDefault = Standardeinstellung verwenden
simQueueLinked = Linked Priority Queue
simQueuePriority = Java Priority Queue
simQueueListOfQueues = Sorted Linked List of Queues
simQueueTreeOfQueues = Sorted Tree of Queues
simQueueSplay = Splay Tree Priority Queue
simRestartLabel = Schließen Sie das Projekt und öffnen Sie es erneut, damit die Änderungen wirksam werden.
#
# prefs/IntlOptions.java
#
intlGateShape = Gatterform:
intlHelp = Internationalierung bearbeiten
intlLocale = Sprache:
intlTitle = International
shapeDIN40700 = DIN 40700
shapeRectangular = IEC
shapeShaped = ANSI
#
# prefs/LayoutOptions.java
#
layoutAddAfter = Nach dem Einfügen von Bauteilen:
layoutAddAfterEdit = Zum Bearbeitungswerkzeug wechseln
layoutAddAfterUnchanged = Bauteile-Werkzeug aktiviert lassen
layoutAddShowGhosts = Geisterbilder beim Hinzufügen anzeigen
layoutAntiAliasing = Antialiasing verwenden
layoutAttributeHalo = Schatten des Attributs anzeigen
layoutDefaultAppearance = Verwenden Sie die Standardeinstellungen von:
layoutHelp = Konfiguration des Layout-Editors
layoutMoveKeepConnect = Verbindungen beim Verschieben beibehalten
layoutNamedCircuitBoxesFixedSize = Schaltungsblöcke mit fester Größe verwenden
layoutRadix1 = Erste Zahlenbasis wenn Leitung angeklickt wird:
layoutRadix2 = Zweite Zahlenbasis wenn Leitung angeklickt wird:
layoutShowTips = Bauteiletipps anzeigen
layoutTitle = Layout-Editor
layoutUseNewInputOutputSymbols = Neue Symbole für Ein- und Ausgänge verwenden
layoutPinAppearance = Anschluss Pin Design:
layoutPinAppearanceDotSmall = Kleiner Punkt
layoutPinAppearanceDotMedium = Mittlerer Punkt
layoutPinAppearanceDotBig = Großer Punkt
layoutPinAppearanceDotBigger = Größerer Punkt
#
# prefs/PreferencesFrame.java
#
preferencesFrameMenuItem = Voreinstellungen
preferencesFrameTitle = Voreinstellungen
#
# prefs/SimOptions.java
#
simBusColTitle = Farbe für Busse:
simColorBlindColors = Farben für Farbenblinde
simDefaultColors = Standardfarben von Logisim-evolution
simDontCareCharTitle = Zeichen für den Wert „don’t care“:
simErrorCharTitle = Zeichen für den Wert Fehler:
simErrorColTitle = Farbe für den Wert Fehler:
simFalseCharTitle = Zeichen für den Wert falsch:
simFalseColTitle = Farbe für den Wert falsch:
simHelp = Verwendete Farben und Symbole für die Simulation bearbeiten
simKmapColors = Diagrammfarbe %d:
simKmapColorsTitle = Farben des Karnaugh-Diagramms:
simNilColTitle = Farbe für nicht verbunden:
simStrokeColTitle = Farbe für Leitungen/Busse:
simTitle = Simulation
simTrueCharTitle = Zeichen für den Wert wahr:
simTrueColTitle = Farbe für den Wert wahr:
simUnknownCharTitle = Zeichen für den Wert unbekannt:
simUnknownColTitle = Farbe für den Wert unbekannt:
simWidthErrorBackgroundTitle = Hintergrundfarbe für Breitenfehler:
simWidthErrorCaptionTitle = Beschriftungsfarbe für Breitenfehler:
simWidthErrorHighlightTitle = Hervorhebungsfarbe für Breitenfehler:
simWidthErrorTitle = Farbe für Breitenfehler:
simClockFrequencyTitle = Farbe für die Taktfrequenzanzeige:
#
# prefs/TemplateOptions.java
#
selectDialogButton = Auswählen
selectDialogTitle = Vorlage auswählen
templateCustomOption = Individuelle Vorlage:
templateEmptyOption = Leere Vorlage
templateErrorMessage = Vorlage %s konnte nicht geladen werden
templateErrorTitle = Fehler beim Laden der Vorlage
templateHelp = Wählen Sie die aktuelle Vorlage
templatePlainOption = Einfache Vorlage
templateSelectButton = Auswählen…
templateTitle = Vorlage
templateRemoveLibsOnSave = Unbenutzte Bibliotheken beim Speichern entfernen
#
# prefs/AutosaveOptions.java
#
autosaveEnabled = Aktiviere automatische Sicherungen (Erfordert Neustart).
autosaveInterval = Intervall für automatische Sicherungen in Sekunden:
autosaveTitle = Automatische Sicherungen
autosaveHelp = Einstellungen für die automatischen Sicherungen ändern
#
# prefs/WindowOptions.java
#
windowHelp = Konfiguration des Hauptfensters
windowTickRate = Schaltfrequenz anzeigen
windowTitle = Fenster
windowToolbarHidden = Versteckt
windowToolbarImportant = Wichtig: Das Ändern der folgenden Werte kann zu unvorhersehbaren\nErgebnissen führen!
windowToolbarLocation = Position der Werkzeugleiste
windowToolbarLookandfeel = Sehen und Fühlen:
windowToolbarPleaserestart = Bitte starten Sie Logisim-evolution neu.
windowToolbarPreview = Preview
windowToolbarReset = Fensterlayout auf Logisim-evolutions Standardeinstellungen zurücksetzen
windowToolbarZoomfactor = Zoom-Faktor
windowCanvasBgColor = Hintergrundfarbe der Leinwand:
windowComponentColor = Komponentenfarbe:
windowComponentIconColor = Farbe des Komponentensymbols:
windowGridBgColor = Hintergrundfarbe des Gitters:
windowGridDotColor = Farbe der Gitterpunkte:
windowGridZoomedDotColor = Farbe des Gitterzoompunkts:
windowGridColorsReset = Gitter-Farben auf den Logisim-Standard zurücksetzen
windowSetAutoScaleFactor = Setzt den Zoom-Faktor auf den Standardwert von Logisim
windowCanvasLocation = Position der Hauptarbeitsfläche:
#
# prefs/HotkeyOptions.java
#
hotkeyOptMenuKeyHeader = Menü-Shortcuts die %s beinhalten müssen:
hotkeyOptNormalKeyHeader = Situationsabhängige Shortcuts die %s nicht benötigen:
hotkeyOptOrientDesc = Komponenten ausrichten
hotkeyOptHelp = Um die Tastenbelegung festzulegen, klicken Sie auf den umrandeten Bereich rechts und drücken Sie die gewünschten Tasten auf dem Tastenfeld. Klicken Sie auf das Häkchen, um die Einstellungen zu speichern, oder verwerfen Sie sie durch Anklicken des Kreuzes.
hotkeyOptTitle = Shortcut-Einstellungen
hotkeyOptResetBtn = Auf Standardeinstellungen zurücksetzen
hotkeySimAutoPropagate = Automatisch weiterschalten
hotkeySimReset = Simulation zurücksetzen
hotkeySimStep = Simulation weiterschalten
hotkeySimTickHalf = Einen halben Zyklus weiterschalten
hotkeySimTickFull = Einen vollen Zyklus weiterschalten
hotkeySimTickEnabled = Simulator kontinuierlich betreiben
hotkeyEditUndo = Rückgängigmachen
hotkeyEditRedo = Wiederherstellen
hotkeyWindowClose = Fenster schließen
hotkeyWindowMinimize = Fenster minimieren
hotkeyFileExport = Datei exportieren
hotkeyFilePrint = Design drucken
hotkeyErrMeta = Der Shortcut muss die %s Taste enthalten.
hotkeyErrConflict = Überschneidung mit: %s.
hotkeyDirNorth = Norden
hotkeyDirSouth = Süden
hotkeyDirEast = Osten
hotkeyDirWest = Westen
hotkeyEditMenuDuplicate = Duplizieren
hotkeyEditToolDuplicate = Auswahl duplizieren
hotkeyProjMoveUp = Schaltung nach oben bewegen
hotkeyProjMoveDown = Schaltung nach unten bewegen
hotkeyAutoLabelOpen = Label bearbeiten
hotkeyAutoLabelToggle = Label-Sichtbarkeit umschalten
hotkeyAutoLabelView = Label anzeigen
hotkeyAutoLabelHide = Label ausblenden
hotkeyAutoLabelSelfNumberedStop = keine automatische Nummerierung
hotkeyAddToolRotate = Beim Positionieren rotieren
hotkeyGateModifierSizeSmall = Schmale Gattergröße
hotkeyGateModifierSizeMedium = Mittlere Gattergröße
hotkeyGateModifierSizeWide = Breite Gattergröße
hotkeyGateModifierInputAdd = Eingang zu Gatter hinzufügen
hotkeyGateModifierInputSub = Eingang von Gatter entfernen
#
# start/About.java
#
aboutDialogTitle = Über Logisim-evolution
aboutDialogClose = Schließen
aboutDialogCopyDetails = Details kopieren
#
# start/AboutCredits.java
#
creditsRoleFork = Fork des Originalprojekt
creditsRoleOriginal = Originalversion
creditsBuildInfo = Build-Informationen
creditsCompiled = Kompiliert: %s
creditsDevelopedBy = Entwickelt von
creditsDevelopedByAndOthers = und vielen mehr.
#
# start/SplashScreen.java
#
progressFileCreate = Erzeuge Datei…
progressFileLoad = Lade Datei…
progressFrameCreate = Erzeuge Fenster…
progressGuiInitialize = Initialisiere Benutzerschnittstelle…
progressLibraries = Lade Bauteile…
progressProjectCreate = Erzeuge Projekt…
progressTemplateClose = Schließe Vorlage…
progressTemplateCreate = Erzeuge Vorlage…
progressTemplateLoad = Lade Vorlage…
progressTemplateOpen = Öffne Vorlage…
startupCloseButton = Schließen
startupQuitButton = Beenden
#
# start/Startup.java
#
argCircuitOption = Testet die Schaltung des als Argument übergebenen Namens anstelle von „main“; wird zusammen mit „-tty table“ verwendet.
argClearOption = Löscht die Anwendungseinstellungen beim Start.
argDuplicateSubstitutionError = Dieselbe Datei kann nicht mehrfach ersetzt werden.
argGatesOption = Setzt „ANSI“- oder „IEC“-Gatterstil.
argGatesOptionArgName = Form
argGatesOptionError = Argument für --gates Option muss „ANSI“ oder „IEC“ sein.
argGeometryError = Argument für --geometry muss in Form von „BREITExHÖHE“ oder „BREITExHÖHE+X+Y“ sein.
argGeometryOption = Legt die Geometrie für das Hauptfenster fest: Argumente: WIDTHxHEIGHT[+X+Y]
argGeometryOptionArgName = Geometrie
argHelpOption = Zeigt diese Übersichthilfeseite für die Argumente an.
argLoadOption = Abbilddatei in den RAM laden (funktioniert nur mit -tty).
argLoadOptionArgName = file
argSaveOption = RAM in Abbilddatei speichern (funktioniert nur mit -tty).
argSaveOptionArgName = file
argLocaleOption = Setzt das als Argument angegebene Gebietsschema.
argLocaleOptionArgName = lang
argNoSplashOption = Blendet den Splash-Screen beim Start aus.
argMainCircuitOption = Setzt die zu verwendende Hauptschaltung. Argumente: <Schaltkreisname>
argMainCircuitOptionArgName = name
argTestVectorOption = Testvektor. Argumente: <Schaltkreisname> <Testvektor> <Schaltkreisdatei>
argTestVectorOptionArgName = args
argOneTemplateError = Nur eine Vorlage erlaubt.
argSubOption = Ersetzt die Bibliothek lib1 durch lib2. Argumente: lib1 lib2.
argSubOptionArgName = args
argTemplateOption = Vorlage auswählen. Argument: „empty“ für eine leere Vorlage, „plain“ für die Standardvorlage, oder der Dateiname 
argTemplateOptionArgName = arg
argTestCircGenOption = Öffne eine .circ-Datei einer beliebigen Version von Logisim und schreibe eine neue Datei im aktuellen Format, das in Logisim-evolution verwendet wird. Argumente: <circ_input> <circ_output>
argTestCircGenOptionArgName = args
argTestCircuitOption = Öffnet eine .circ-Datei und startet die Testbench darin. Es wird Erfolg oder Fehlschlag zurückgegeben. Argumente: <Pfad_zu_circ>
argTestCircuitOptionArgName = file
argTestImplement = Testen der Implementierung des Entwurfs unter Verwendung der Datei circ_input. Die Implementierung circuit_name ist die zu implementierende Schaltung (FPGA_Top) und board ist der Name der Platine, die sich in resources/logisim/boards/ befindet, ohne die Erweiterung „.xml“. Die optionale Tickfrequenz wird in Hz angegeben. Der optionale Schalter HDLONLY erzeugt nur die HDL-Beschreibung und führt keine Synthese, P&R und keinen Download durch. Argumente: <circ_input> <circuit_name> <board> [tick frequency] [HDLONLY]
argTestImplementArgName = args
argTestInvalidArguments = Ungültige Argumente für die Option --test-fpga. Unterstützt werden: <circ_input> <circuit_name> <board> [tick frequency] [HDLONLY]"
argTestUnknownFlagOrValue = Ungültiger Wert oder unbekanntes Flag: %s
argTtyOption = Ohne grafische Oberfläche ausführen. Argument: TTY-Format.
argTtyOptionArgName = Format
argVersionOption = Versionsnummer anzeigen und beenden
invalidLocaleError = Das angegebene Gebietsschema wird nicht unterstützt.
invalidLocaleOptionsHeader = Unterstützte Gebietsschemata:
loadMultipleError = Die Option „--load“ kann nur einmal angegeben werden.
loadNeedsTtyError = Die Option „--load“ funktioniert nur in Verbindung mit „--tty“.
saveMultipleError = Die Option „--save“ kann nur einmal angegeben werden.
saveNeedsTtyError = Die Option „--save“ funktioniert nur in Verbindung mit „--tty“.
templateCannotReadError = No permission to read template file: %s
templateMissingError = Die Vorlagendatei existiert nicht: %s
ttyFormatError = „--tty“ erfordert mindestens eine der folgenden Optionen: halt, speed, stats, table, tty, binary, hex, csv, tabs
ttyNeedsFileError = Die Verwendung von „--tty“ erfordert einen in der Befehlszeile angegebenen Dateinamen.
saveAndLoadOption = Speichern und laden
titleHandleAutosave = Automatische Sicherung gefunden
contentHandleAutosave = Automatische Sicherungsdatei ‚%s‘ gefunden. Wie vorgehen?
#
# start/TtyInterface.java
#
loadIoError = Fehler beim Lesen der Datei mit Speicherabbild
loadNoRamError = Kein RAM für die „--load“-Option gefunden.
saveIoError = Fehler beim Erstellen der Datei mit Speicherabbild
saveNoRamError = Kein RAM für die „--save“-Option gefunden.
statsTotalWith = GESAMT (mit Teilschaltungen)
statsTotalWithout = GESAMT (ohne Teilschaltungen)
ttyHaltReasonOscillation = aufgrund von erkannter Oszillation angehalten
ttyHaltReasonPin = durch Stopeingang angehalten
ttyLoadError = Fehler beim Laden der Schaltungsdatei: %s
ttyNoTtyError = Keine TTY oder Tastatur-Komponente wurde gefunden.
ttySpeedMsg = %s Hz (%s Takte in %s Millisekunden)
#
# test/TestFrame.java
#
failMessage = Fehlgeschlagen: %s
fileCannotParseMessage = Der Testvektor in „%s“ konnte nicht analysiert werden.\n Detail: %s.
fileCannotReadMessage = Du hast keine Berechtigung, in „ %s “ zu lesen.
fileCannotReadTitle = Datei nicht verfügbar
fileWrongPinsMessage = Der Testvektor in „%s“ stimmt nicht mit der Schaltung überein.\n Details: %s.
fileWrongPinsTitle = Fehler beim Laden des Testvektors
loadButton = Ladevektor
passMessage = Bestanden: %s
resetButton = Zurücksetzen
runButton = Ausführen
stopButton = Stopp
testFrameMenuItem = %s: Testvektor
testFrameTitle = Testvektor %s von %s
#
# test/TestPanel.java
#
expectedValueMessage = Erwartete %s
failStatus = gescheitert
passStatus = bestanden
statusHeader = Status
#
# test/TestThread.java
#
testFailed = Fehler beim Testvektor %s:
testLoadingFailed = Fehler beim Laden des Testvektors: %s
testLoadingVector = Laden des Testvektors „%s“…
testResults = Bestanden: %s, Fehlgeschlagen: %s
testRunning = Laufende %s-Vektoren…
testSetupFailed = Fehler bei der Vorbereitung des Testvektors: %s
untitled = Nicht benannt
behaviorFrameTitle = Editor de comportamiento
